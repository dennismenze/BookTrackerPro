"""Update Book model and add Translation model

Revision ID: 20b650e5cca0
Revises: convert_string_to_json
Create Date: 2024-10-05 13:19:54.484449

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision = '20b650e5cca0'
down_revision = 'convert_string_to_json'
branch_labels = None
depends_on = None


def upgrade():

    # Update authors table
    with op.batch_alter_table('authors', schema=None) as batch_op:
        batch_op.add_column(sa.Column('name_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('bio_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key('fk_authors_name_id_translation', 'translation', ['name_id'], ['id'])
        batch_op.create_foreign_key('fk_authors_bio_id_translation', 'translation', ['bio_id'], ['id'])
        batch_op.drop_column('name')
        batch_op.drop_column('bio')

    # Update books table
    with op.batch_alter_table('books', schema=None) as batch_op:
        batch_op.add_column(sa.Column('title_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('description_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key('fk_books_title_id_translation', 'translation', ['title_id'], ['id'])
        batch_op.create_foreign_key('fk_books_description_id_translation', 'translation', ['description_id'], ['id'])
        batch_op.drop_column('title')
        batch_op.drop_column('description')

    # Update lists table
    with op.batch_alter_table('lists', schema=None) as batch_op:
        batch_op.add_column(sa.Column('name_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('description_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key('fk_lists_name_id_translation', 'translation', ['name_id'], ['id'])
        batch_op.create_foreign_key('fk_lists_description_id_translation', 'translation', ['description_id'], ['id'])
        batch_op.drop_column('name')
        batch_op.drop_column('description')

    # ### end Alembic commands ###

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Revert lists table
    with op.batch_alter_table('lists', schema=None) as batch_op:
        batch_op.add_column(sa.Column('name', sa.VARCHAR(length=100), nullable=True))
        batch_op.add_column(sa.Column('description', sa.TEXT(), nullable=True))
        batch_op.drop_constraint('fk_lists_name_id_translation', type_='foreignkey')
        batch_op.drop_constraint('fk_lists_description_id_translation', type_='foreignkey')
        batch_op.drop_column('description_id')
        batch_op.drop_column('name_id')

    # Revert books table
    with op.batch_alter_table('books', schema=None) as batch_op:
        batch_op.add_column(sa.Column('title', sa.VARCHAR(length=200), nullable=True))
        batch_op.add_column(sa.Column('description', sa.TEXT(), nullable=True))
        batch_op.drop_constraint('fk_books_title_id_translation', type_='foreignkey')
        batch_op.drop_constraint('fk_books_description_id_translation', type_='foreignkey')
        batch_op.drop_column('description_id')
        batch_op.drop_column('title_id')

    # Revert authors table
    with op.batch_alter_table('authors', schema=None) as batch_op:
        batch_op.add_column(sa.Column('name', sa.VARCHAR(length=100), nullable=True))
        batch_op.add_column(sa.Column('bio', sa.TEXT(), nullable=True))
        batch_op.drop_constraint('fk_authors_name_id_translation', type_='foreignkey')
        batch_op.drop_constraint('fk_authors_bio_id_translation', type_='foreignkey')
        batch_op.drop_column('bio_id')
        batch_op.drop_column('name_id')
    # ### end Alembic commands ###
